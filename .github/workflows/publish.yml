name: Publish

on:
  release:
    types:
      - published
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_output.outputs.version }}
    env:
      VERSION: ""
    steps:
      - name: Get version from release
        if: github.event_name == 'release'
        run: |
          echo "VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      - name: Get version from API
        if: github.event_name == 'workflow_dispatch'
        id: release_api
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/releases/latest
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Parse API response
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "VERSION=${{ fromJson(steps.release_api.outputs.data).tag_name }}" >> $GITHUB_ENV

      - name: Log version
        run: |
          echo "Version: $VERSION"

      - name: Fail if no version
        run: |
          if [ -z "$VERSION" ]; then
            echo "No version found"
            exit 1
          fi

      - name: Set version output
        id: set_output
        run: |
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  docker:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Get last release tag
        id: last_release_tag
        run: echo ::set-output name=tag::$(git describe --tags --abbrev=0)

      - name: Check for changes in specific directory since last release
        id: check_changes
        run: |
          CHANGED=$(git diff --name-only ${{ steps.last_release_tag.outputs.tag }} HEAD -- home_automations/)
          if [ -n "$CHANGED" ]; then
            echo "Changes detected in home_automations since the last release."
            echo "::set-output name=changed::true"
          else
            echo "No changes detected in home_automations since the last release."
            echo "::set-output name=changed::false"
          fi

      - name: Install Python
        if: steps.check_changes.outputs.changed == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        if: steps.check_changes.outputs.changed == 'true'
        uses: abatilo/actions-poetry@v2

      - name: Install dependencies
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          poetry config virtualenvs.create false
          poetry install --without dev --without test

      - name: Set package version
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          poetry version ${{ needs.version.outputs.version }}

      - name: Login
        if: steps.check_changes.outputs.changed == 'true'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Extract metadata
        if: steps.check_changes.outputs.changed == 'true'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ needs.version.outputs.version }}
            latest

      - name: Build and publish docker image
        if: steps.check_changes.outputs.changed == 'true'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
